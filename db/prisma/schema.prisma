// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
}
model Zap {
  id String @id @default(cuid())
  trigger Triger?
  actions Action[]
  zapRuns ZapRun[]
}

model Triger {
  id String @id @default(cuid())
  zapId String @unique
  triggerId String
  type AvailableTriggers @relation(fields: [triggerId],references: [id],onDelete: Cascade)
  zap Zap @relation(references: [id],fields: [zapId])
  sortingOrder Int @default(0)
}
model Action {
  id String @id @default(cuid())
  name String
  zapId String
  zap Zap @relation(references: [id],fields: [zapId])
  availableActionId String
  type AvailableAction @relation(fields: [availableActionId],references: [id])
}

model AvailableAction{
  id String @id @default(cuid())
  name String
  action Action[]
}
model AvailableTriggers {
  id String @id @default(cuid())
  name String
  triggers Triger[]
  
}

model ZapRun {
  id String @id @default(cuid())
  ZapId String 
  metaData Json 
  zap Zap @relation(fields: [ZapId],references: [id])
  zapRunOutbox zapRunOutbox? 
}

model zapRunOutbox {
  id String  @id @default(cuid())
  zapRunId String @unique
  zapRun ZapRun @relation(fields: [zapRunId], references: [id])
} 